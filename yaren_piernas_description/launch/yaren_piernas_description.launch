<launch>
  <arg name="arg_x" default="0.00" />
  <arg name="arg_y" default="0.00" />
  <arg name="arg_z" default="0.00" />
  <arg name="arg_R" default="0.00" />
  <arg name="arg_P" default="0.00" />
  <arg name="arg_Y" default="0.00" />
  
  <!--Urdf file path-->
  <param name="robot_description" textfile="$(find yaren_piernas_description)/urdf/yaren_piernas_description.urdf"/>

  <!--spawn a empty gazebo world-->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" />
  <node name="tf_footprint_base" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 base_link base_footprint 40" />
  
  <!--spawn model-->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-x $(arg arg_x) -y $(arg arg_y) -z $(arg arg_z) -Y $(arg arg_Y) -param robot_description -urdf -model yaren_piernas_description -J CoxisD_Joint 0.0 -J MusloD3_Joint 0.0 -J MusloD5_Joint 0.0 -J PantorrillaD_Joint 0.0 -J PieD9_Joint  0.0 -J PieD11_Joint 0.0 -J CoxisI_Joint 0.0 -J MusloI4_Joint 0.0 -J MusloI6_Joint 0.0 -J PantorrillaI_Joint 0.0 -J PieI10_Joint 0.0 -J PieI12_Joint 0.0" />
  
  <!--Load and launch the joint trajectory controller-->
  <rosparam file ="$(find yaren_piernas_description)/config/joint_trajectory_controller.yaml" command="load"/>
  <node name= "controller_spawner" pkg= "controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller legs_robot_D_controller legs_robot_I_controller"/>
  
  <!-- Robot State Publisher for TF of each joint: publishes all the current states of the joint, then RViz can visualize -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>
</launch>
